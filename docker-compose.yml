services:
  app:
    build: .
    volumes:
        - ./app/keys:/app/keys:ro
    command: python -m app.server
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - HOST=postgres
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    container_name: db
    image: postgres:latest
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U$$USER -d$$DB" ]
      interval: 1s
      timeout: 5s
      retries: 10
    restart: unless-stopped

  pgadmin:
    container_name: pg
    image: dpage/pgadmin4
    attach: false
    env_file:
      - .env
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - 8080:80
    depends_on:
      - postgres
    restart: unless-stopped

volumes:
  postgres_data:
  pgadmin_data:
